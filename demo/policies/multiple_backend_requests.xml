<policies>
    <inbound>
        <base />
        <set-variable name="googleApiKey" value="AIzaSyB_52wvOomYyakyVmxjTJ2E0gqmNIy86Ug"/>
        <send-request mode="new" response-variable-name="googleZipCode" timeout="5" ignore-error="true">
            <set-url>@($"https://maps.googleapis.com/maps/api/geocode/json?address={(string) context.Request.OriginalUrl.Query.GetValueOrDefault("zipCode")}&key={(string) context.Variables["googleApiKey"]}")</set-url>
            <set-method>GET</set-method>
        </send-request>
        <send-request mode="new" response-variable-name="googlePlaces" timeout="5" ignore-error="true">
            <set-url>@($"https://maps.googleapis.com/maps/api/place/textsearch/json?query=Craft+beer+in+{(string) context.Request.OriginalUrl.Query.GetValueOrDefault("zipCode")}&key={(string) context.Variables["googleApiKey"]}")</set-url>
            <set-method>GET</set-method>
        </send-request>
        <return-response response-variable-name="existing response variable">
            <set-status code="200" reason="OK" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-body>@{
                JObject zipCodeOutput = ((IResponse)context.Variables["googleZipCode"]).Body.As<JObject>();
                string formattedAddress = (string) zipCodeOutput["results"][0]["formatted_address"];

                JObject placesOutput = ((IResponse)context.Variables["googlePlaces"]).Body.As<JObject>();
                string placeName = (string) placesOutput["results"][0]["name"];
                string placeAddress = (string) placesOutput["results"][0]["formatted_address"];

                return new JObject(new JProperty("beerZipCodeResults",
                            new JObject(
                                new JProperty("zipCodeDescription", formattedAddress),
                                new JProperty("craftBeerPlace", placeName),
                                new JProperty("craftBeerLocation", placeAddress)
                            ))).ToString();
            }</set-body>
        </return-response>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>